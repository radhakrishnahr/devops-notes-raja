azure notes : (Admin vs Dev)
============================

Azure hierarchy :

1) TENANT_ID (using tenant id we can connect with other microsoft applications like o365, ms dynamics, etc--)
2) MICROSOFT AZURE PUBLIC CLOUD
3) SUBSCRIPTION ( EX: DEV, PROD, STAGIND)
4) RESOURCE_GROUP
5) AZURE RESOURCES (VNET, VM, LB, AUTO, SQL, ..etc) 

IP Addressing :
===============

IP Address Ranges :

IPv4 : 192.168.1.100
0.0.0.0 to 255.255.255.255

Class A : 1.0.0.0 to 127.255.255.255
Class A Private Range : 10.0.0.0 to 10.255.255.255

Class B : 128.0.0.0 to 191.255.255.255
Class B Private Range : 171.16.0.0 to 172.31.255.255

Class C : 192.0.0.0 to 223.255.255.255
Class C Private Range : 192.168.0.0 to 192.168.255.255

TERMINALOGY : NETWORK ADDRESS TRANSLATING (NAT), PUBLIC IP, PRIVATE IP

SUBNETTING : Divides a big network in to small parts
============
10.0.0.0/8 to 255.255.255.255 ---> 16million IP's
255.0.0.0 - Subnet Mask or Mask

10.0.0.0/16 ---> 65000
255.255.0.0

10.0.0.0/24 ---> 255
255.255.255.0

Ex : 
10.1.0.0/16 cidr block
WebServers -> 10.1.1.0/24 => 255
AppServers -> 10.1.2.0/24 => 255
DbServers -> 10.1.3.0/24 => 255

Regions and Availability Zones :
================================
Region : A geographic location of multiple availability zones
Availability Zones :

Note : We can create azure resources from other region under the Azure RG even RG is created at specific region.

 Azure Cloud Shell :
 ===================
 
 shell.azure.com
 
 > watch ls ( to prevent log off )
 > cntl+l (to clear your screeen)
 
 -> cloud shell creates RG, storage account in backend to store your files.
 
 -> We can use Bash(bash) or Power shell(pwsh)
 
Sample bash script to create Azure resources :
==============================================
 
RG=RAJA-RG
az group create --location eastus -n ${RG}

az network vnet create -g ${RG} -n ${RG}-vNET1 --address-prefix 10.1.0.0/16 \
--subnet-name ${RG}-Subnet-1 --subnet-prefix 10.1.1.0/24 -l eastus


az network vnet subnet create -g ${RG} --vnet-name ${RG}-vNET1 -n ${RG}-Subnet-2 \
--address-prefixes 10.1.2.0/24

az network vnet subnet create -g ${RG} --vnet-name ${RG}-vNET1 -n ${RG}-Subnet-3 \
--address-prefixes 10.1.3.0/24

az network vnet subnet create -g ${RG} --vnet-name ${RG}-vNET1 -n AzureFirewallSubnet \
--address-prefixes 10.1.10.0/24

az network nsg create -g ${RG} -n ${RG}-NSG1

az network nsg rule create -g ${RG} --nsg-name ${RG}-NSG1 -n ${RG}-NSG1_RULE1 --priority 100 \
--source-address-prefixes '*' --source-port-ranges '*'     --destination-address-prefixes '*' \
--destination-port-ranges '*' --access Allow     --protocol '*' --description "Allowing All Traffic For Now"

az vm create --resource-group ${RG} --name WINVM1 --image win2019Datacenter --vnet-name ${RG}-vNET1 \
--subnet ${RG}-Subnet-1 --admin-username raja-vm --admin-password "India@123456" --size Standard_B2ms \
--nsg "" 

#${RG}-NSG1 --custom-data ./clouddrive/cloud-init2.txt

az vm create --resource-group ${RG} --name LINUXVM2 --image UbuntuLTS --vnet-name ${RG}-vNET1 \
--subnet ${RG}-Subnet-2 --admin-username raja-vm --admin-password "India@123456" --size Standard_B1s \
--nsg ""

#${RG}-NSG1 --custom-data ./clouddrive/cloud-init2.txt

watch ls


===================


for windows vm,

1) disable IE Enhanced security configuration available at Local Server option
2) open command promt -> firewall.cpl (enter) -> Turn off windows defender firewall
3) (i) open cmd > ipconfig /all > ncpa.cpl > opens ethernet > properties > we can add dns server
   (ii) open azure vnet resource > DNS server > custom > enter IP Address and DNS server's IP address
   (iii) open virtual machine > Networking > NetworkInterface > DNS servers > custom > ipaddress of dns server > hard reboot
		and verify by executing these commands > ipconfig /all > sysdm.cpl (check)
		open Server Manager > manage > Add roles and features wizard > next next ... > check Active directory domain services > next next .. > install
		> need to check post deployment configuration (yello triangle shaped box on right top !)
		> click on promote this server to a domain controller > add a new forest > enter domain name (aishwaryarajbattula-k8s.xyz)
		> next ... > install > it reboots system
		> after logged in to the server, excute  sysdm.cpl and dsa.msc and check dns name of the server
====================	

> to decommission the resources, We can manually delete the resource group or by executing following command on cloudshell we can cleanup our resources.

			az group delete --name RAJA-RG --yes

===================================================

Azure virtual network (vnet) :
==============================

> let us create 3 RG's in Azure cloud
> create two vnets in each RG
> place a vm in each vnet
> There is no communication between different vnet
> To do this we require "vnet peering"
> we use hub-spoke architecture to perform vnet peering task

hub-spoke architecture :
------------------------

> Let us create one RG for shared/mnmt/hub and also create one or more RG's for spoke
> To reach servers in side spoke RG to the internet or on-premises infra, we usually requires seperate vpn connection for each RG. It is costly process
> for this, we need to place several azure services in side the hub RG such as azure firewall, azure virual network gateway(vng) and also we place few servers for Active directory, monitoring logs, Jump or Bastion server.
> After above step, we establish vnet peering between hub vnet and spoke vnet resources.
> Using above hub-spoke architecture we can expose our applciation in the spoke rg using route table to the Internet or On-premises infra using vpn connectivity

#HUB-RG Creation
echo "Creating Azure Resource Group"
az group create -l eastus -n HUB-RG
 
echo "Creating Azure Virtual Network"
az network vnet create -g HUB-RG -n HUB-RG-vNET1 --address-prefix 10.1.0.0/16 \
--subnet-name HUB-RG-Subnet-1 --subnet-prefix 10.1.1.0/24 -l eastus

az vm create --resource-group HUB-RG --name MGMTVM --image UbuntuLTS --vnet-name HUB-RG-vNET1 \
--subnet HUB-RG-Subnet-1 --admin-username testuser --admin-password "India@123456" --size Standard_B1s \
--nsg ""
  
#ALPHA RG Creation

echo "Creating Azure Resource Group"
az group create -l eastus -n ALPHA
 
echo "Creating Azure Virtual Network"
az network vnet create -g ALPHA -n ALPHA-vNET1 --address-prefix 172.21.0.0/16 \
--subnet-name ALPHA-Subnet-1 --subnet-prefix 172.21.1.0/24 -l eastus

az vm create --resource-group ALPHA --name ALPHAVM1 --image UbuntuLTS --vnet-name ALPHA-vNET1 \
--subnet ALPHA-Subnet-1 --admin-username testuser --admin-password "India@123456" --size Standard_B1s \
--nsg ""

#BRAVO RG Creation

echo "Creating Azure Resource Group"
az group create -l eastus -n BRAVO
 
echo "Creating Azure Virtual Network"
az network vnet create -g BRAVO -n BRAVO-vNET1 --address-prefix 172.22.0.0/16 \
--subnet-name BRAVO-Subnet-1 --subnet-prefix 172.22.1.0/24 -l eastus

az vm create --resource-group BRAVO --name BRAVOVM1 --image UbuntuLTS --vnet-name BRAVO-vNET1 \
--subnet BRAVO-Subnet-1 --admin-username testuser --admin-password "India@123456" --size Standard_B1s \
--nsg ""

#CHARLIE RG Creation

echo "Creating Azure Resource Group"
az group create -l westus -n CHARLIE
 
echo "Creating Azure Virtual Network"
az network vnet create -g CHARLIE -n CHARLIE-vNET1 --address-prefix 172.23.0.0/16 \
--subnet-name CHARLIE-Subnet-1 --subnet-prefix 172.23.1.0/24 -l westus

az vm create --resource-group CHARLIE --name CHARLIEVM1 --image UbuntuLTS --vnet-name CHARLIE-vNET1 \
--subnet CHARLIE-Subnet-1 --admin-username testuser --admin-password "India@123456" --size Standard_B1s \
--nsg ""

vnet peering :
--------------

two basic rules :

> No IP address overlapping between vnets.
> Transit routing is not supported.
> To set vnet peering between two vnets, firstly from hub vnet select Peerings > Add [ Peering link names (need two links)and Add ]
> We can set vnet peering between different regions, different subscriptions.
> We can set vnet peering between different Azure accounts by providing Resource ID of another account and need to authenticate account.
> Resource ID is available under vnet > properties
> To add user in one account, Active Directory > Users > New User > Invite User > Invite [ another will get email to accept invitation ]
> To set permissions to the User, Users > select User > Assigned Roles > Add Assignements > select roles and add
> To set contributor access to the User from current subscription, subscriptions > select subscription > IAM > Add Role > Select contributor > Assign access to the User > Next > Review and Assign



	






 
 
 
